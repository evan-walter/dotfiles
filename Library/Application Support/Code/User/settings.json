{
    "accessibility.signals.lineHasError": {
        "sound": "off"
    },
    "accessibility.signals.lineHasWarning": {
        "sound": "off"
    },

    "activitusbar.views": [
        {
            "name": "todo-tree-view",
            "codicon": "list-tree"
        }
    ],

    "colorize.include": ["**/*.ts", "**/*.tsx"],
    "colorize.languages": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
    ],

    // Controls the maximum number of spelling errors per document.
    "cSpell.maxNumberOfProblems": 10000,
    // Controls the number of suggestions shown.
    "cSpell.numSuggestions": 8,
    // The minimum length of a word before checking it against a dictionary.
    "cSpell.minWordLength": 4,
    // Enable / Disable the spell checker.
    "cSpell.enabled": true,
    // Display the spell checker status on the status bar.
    "cSpell.showStatus": true,
    // Enable / Disable compound words like 'errormessage'
    "cSpell.allowCompoundWords": false,
    // Words to be ignored and not suggested.
    "cSpell.ignoreWords": ["behaviour", "colour", "colours"],
    // User words to add to dictionary.  Should only be in the user settings.
    "cSpell.userWords": ["uncategorized", "unprioritized"],
    // Specify paths/files to ignore.
    "cSpell.ignorePaths": [
        "node_modules", // this will ignore anything the node_modules directory
        "**/node_modules", // the same for this one
        "**/node_modules/**", // the same for this one
        "node_modules/**", // Doesn't currently work due to how the current working directory is determined.
        "vscode-extension", //
        ".git", // Ignore the .git directory
        "*.dll", // Ignore all .dll files.
        "**/*.dll" // Ignore all .dll files
    ],
    "cSpell.enableFiletypes": ["markdown"],
    // flagWords - list of words to be always considered incorrect
    // This is useful for offensive words and common spelling errors.
    // For example "hte" should be "the"`
    "cSpell.flagWords": ["hte"],
    // Set the delay before spell checking the document. Default is 50.
    "cSpell.spellCheckDelayMs": 50,
    // Set Diagnostic Reporting Level
    //   Error - Report Spelling Issues as Errors
    //   Warning - Report Spelling Issues as Warnings
    //   Information - Report Spelling Issues as Information (default)
    //   Hint - Report Spelling Issues as Hints, will not show up in Problems
    "cSpell.diagnosticLevel": "Information",

    "editor.accessibilitySupport": "off",
    "editor.autoClosingBrackets": "never",
    "editor.autoClosingQuotes": "never",
    "editor.cursorSurroundingLines": 0,
    "editor.cursorSurroundingLinesStyle": "all",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.find.autoFindInSelection": "always",
    "editor.fontFamily": "'Cascadia Code', Menlo, Monaco, 'Courier New', monospace",
    // "editor.fontLigatures": true,
    "editor.fontLigatures": "'calt', 'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'ss06', 'zero', 'onum'",
    "editor.tokenColorCustomizations": {
        "textMateRules": [
            {
                "scope": [
                    "comment",
                    "keyword",
                    "variable",
                    "storage.type",
                    "keyword.control"
                ],
                "settings": {
                    "fontStyle": "italic"
                }
            }
        ]
    },
    "editor.fontSize": 13.5,
    "editor.lineHeight": 1,
    "editor.minimap.enabled": false,
    "editor.stickyScroll.enabled": false,
    // "editor.stickyScroll.maxLineCount": 1,

    // Improve Performance
    "extensions.experimental.affinity": {
        "vscodevim.vim": 1
    },

    "git.openRepositoryInParentFolders": "always",

    "markdownlint.config": {
        "MD007": { "indent": 4 }
    },

    "prettier.tabWidth": 4,

    "redhat.telemetry.enabled": false,

    // Allows similar tags to be grouped under the same type, e.g. `{ "FIX": ["FIXME","FIXIT"] }`. *Note: All tags must also be in the `todo-tree.general.tags` tag list. If a tag group is defined, custom highlights apply to the group, not the tags within the group.*
    "todo-tree.general.tagGroups": {
        "[x]": ["[x]", "[X]"]
    },
    // List of tags. *Note, if one tag starts with another tag, the longer tag should be specified first to prevent the shorter tag being matched.*
    "todo-tree.general.tags": [
        "TODO",
        "[ ]",
        "[x]",
        "~branding",
        "~career",
        "~social",
        "~spiritual"
    ],
    // Custom configuration for highlighting, [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).
    "todo-tree.highlights.customHighlight": {
        // Colors aligned with Tokyo Night theme
        "TODO": {
            "background": "rgba(191,87,0,1)",
            "foreground": "rgba(245,245,245,1)",
            "icon": "tasklist",
            "iconColour": "rgba(191,87,0,1)"
        },
        "[ ]": {
            "icon": "issue-draft",
            "iconColour": "rgba(191,87,0,1)",
            "type": "none"
        },
        "[x]": {
            "icon": "issue-closed",
            "iconColour": "#9aa5ce",
            "type": "none"
        },
        "~branding": {
            "background": "#ff9e64",
            "foreground": "#414868",
            "icon": "flame",
            "iconColour": "#ff9e64",
            "type": "text"
        },
        "~career": {
            "background": "#bb9af7",
            "foreground": "#24283b",
            "icon": "tools",
            "iconColour": "#bb9af7",
            "type": "text"
        },
        "~social": {
            "background": "#73daca",
            "foreground": "#414868",
            "icon": "person",
            "iconColour": "#73daca",
            "type": "text"
        },
        "~spiritual": {
            "background": "#2ac3de",
            "foreground": "#24283b",
            "icon": "cloud",
            "iconColour": "#2ac3de",
            "type": "text"
        }
    },
    // Default configuration for highlighting. [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).
    "todo-tree.highlights.defaultHighlight": {},
    // Set to false to disable highlighting.
    "todo-tree.highlights.enabled": true,
    // Delay before highlighting tags within files (milliseconds).
    "todo-tree.highlights.highlightDelay": 500,
    // Use a colour scheme to colour the tags. This scheme is applied to the tags in the order of tags. The colours can be modified using `todo-tree.highlights.foregroundColourScheme` and `todo-tree.highlights.backgroundColourScheme`. The colour scheme overrides colours in the default highlight, but not the custom highlight.
    "todo-tree.highlights.useColourScheme": true,
    // If true, any subfolders containing a .git file will be ignored when searching.
    "todo-tree.filtering.ignoreGitSubmodules": true,
    // Show counts of TODOs in the tree.
    "todo-tree.tree.showCountsInTree": true,
    // Sort items in the tags only view alphabetically instead of by file and line number.
    "todo-tree.tree.sortTagsOnlyViewAlphabetically": false,
    // Show a button in the tree view title bar to create a file showing the tree content.
    "todo-tree.tree.buttons.export": false,
    // Show a button in the tree view title bar to enable grouping items by sub tag.
    "todo-tree.tree.buttons.groupBySubTag": false,

    "vim.leader": " ",
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["<leader>", "space"],
            "commands": ["workbench.action.quickOpen"]
        },
        {
            "before": ["<leader>", "g", "g"],
            "commands": ["workbench.action.showCommands"]
        },
        {
            "before": ["<leader>", "p", "p"],
            "commands": ["workbench.action.showCommands"]
        },
        { "before": ["<leader>", "w"], "commands": [":w"] },
        {
            "before": ["<leader>", "v"],
            "commands": ["editor.action.formatDocument"]
        },
        {
            "before": ["<leader>", "m"],
            "commands": ["editor.action.formatDocument", ":w"]
        },
        {
            "before": ["<leader>", "z"],
            "commands": ["editor.action.toggleWordWrap"]
        },
        { "before": ["<leader>", "q"], "commands": [":q"] },
        {
            "before": ["<leader>", "t", "t"],
            "commands": ["workbench.view.explorer"]
        },
        {
            "before": ["<leader>", "f", "f"],
            "commands": ["workbench.view.search"]
        },
        {
            "before": ["<leader>", "y", "y"],
            "commands": ["workbench.view.search"]
        },
        {
            "before": ["<leader>", "g", "h"],
            "commands": ["editor.action.showDefinitionPreviewHover"]
        },
        {
            "before": ["<leader>", "p", "u"],
            "commands": ["editor.action.showDefinitionPreviewHover"]
        },
        {
            "before": ["<leader>", "g", "d"],
            "commands": ["editor.action.revealDefinition"]
        },
        {
            "before": ["<leader>", "g", "c"],
            "commands": ["editor.action.commentLine"]
        },
        {
            "before": ["<leader>", "p", "."],
            "commands": ["editor.action.commentLine"]
        },
        {
            "before": ["<leader>", "g", "p"],
            "commands": ["markdown.showPreview"]
        },
        {
            "before": ["<", "<"],
            "commands": ["workbench.action.moveEditorLeftInGroup"]
        },
        {
            "before": [">", ">"],
            "commands": ["workbench.action.moveEditorRightInGroup"]
        },
        {
            "before": ["shift+J"],
            "commands": ["workbench.action.previousEditorInGroup"]
        },
        {
            "before": ["shift+K"],
            "commands": ["workbench.action.nextEditorInGroup"]
        },
        {
            "before": ["<leader>", "a"],
            "commands": ["vscode-harpoon.addEditor"]
        },
        {
            "before": ["<leader>", "h", "q"],
            "commands": ["workbench.action.splitEditorLeft"]
        },
        {
            "before": ["<leader>", "h", "j"],
            "commands": ["workbench.action.splitEditorDown"]
        },
        {
            "before": ["<leader>", "h", "k"],
            "commands": ["workbench.action.splitEditorUp"]
        },
        {
            "before": ["<leader>", "h", "x"],
            "commands": ["workbench.action.splitEditorRight"]
        },
        {
            "before": ["<leader>", "u", "b"],
            "commands": ["workbench.action.splitEditorLeft"]
        },
        {
            "before": ["<leader>", "u", "m"],
            "commands": ["workbench.action.splitEditorDown"]
        },
        {
            "before": ["<leader>", "u", "w"],
            "commands": ["workbench.action.splitEditorUp"]
        },
        {
            "before": ["<leader>", "u", "v"],
            "commands": ["workbench.action.splitEditorRight"]
        },
        {
            "before": ["<leader>", "h", "o"],
            "commands": ["workbench.action.focusLeftGroup"]
        },
        {
            "before": ["<leader>", "h", "e"],
            "commands": ["workbench.action.focusBelowGroup"]
        },
        {
            "before": ["<leader>", "h", "u"],
            "commands": ["workbench.action.focusAboveGroup"]
        },
        {
            "before": ["<leader>", "h", "i"],
            "commands": ["workbench.action.focusRightGroup"]
        },
        {
            "before": ["<leader>", "u", "d"],
            "commands": ["workbench.action.focusLeftGroup"]
        },
        {
            "before": ["<leader>", "u", "h"],
            "commands": ["workbench.action.focusBelowGroup"]
        },
        {
            "before": ["<leader>", "u", "t"],
            "commands": ["workbench.action.focusAboveGroup"]
        },
        {
            "before": ["<leader>", "u", "n"],
            "commands": ["workbench.action.focusRightGroup"]
        },
        {
            "before": ["<leader>", "h", "t"],
            "commands": [
                "editor.action.insertLineAfter",
                "md-shortcut.toggleCheckboxes"
            ],
            "after": ["i"]
        },
        {
            "before": ["<leader>", "u", "e"],
            "commands": [
                "editor.action.insertLineAfter",
                "md-shortcut.toggleCheckboxes"
            ],
            "after": ["i"]
        },
        // Third Party
        // vsnetrw
        {
            "before": ["<leader>", "e"],
            "commands": ["vsnetrw.open"],
            "when": "editorLangId != vsnetrw"
        },
        // Harpoon
        {
            "before": ["<leader>", "h"],
            "commands": ["vscode-harpoon.gotoEditor1"]
        },
        {
            "before": ["<leader>", "t"],
            "commands": ["vscode-harpoon.gotoEditor2"]
        },
        {
            "before": ["<leader>", "n"],
            "commands": ["vscode-harpoon.gotoEditor3"]
        },
        {
            "before": ["<leader>", "s"],
            "commands": ["vscode-harpoon.gotoEditor4"]
        },
        {
            "before": ["<leader>", "d"],
            "commands": ["vscode-harpoon.gotoEditor5"]
        },
        {
            "before": ["<leader>", "c"],
            "commands": ["vscode-harpoon.gotoEditor6"]
        },
        {
            "before": ["<leader>", "r"],
            "commands": ["vscode-harpoon.gotoEditor7"]
        },
        {
            "before": ["<leader>", "l"],
            "commands": ["vscode-harpoon.gotoEditor8"]
        },
        {
            "before": ["<leader>", "b"],
            "commands": ["vscode-harpoon.gotoEditor9"]
        },
        { "before": ["<C-e>"], "commands": ["vscode-harpoon.editEditors"] },
        {
            "before": ["<C-o>"],
            "commands": ["vscode-harpoon.editorQuickPick"]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": ["<leader>", "space"],
            "commands": ["workbench.action.quickOpen"]
        },
        {
            "before": ["<leader>", "g", "g"],
            "commands": ["workbench.action.showCommands"]
        },
        {
            "before": ["<leader>", "p", "p"],
            "commands": ["workbench.action.showCommands"]
        },
        { "before": ["<leader>", "w"], "commands": [":w"] },
        {
            "before": ["<leader>", "v"],
            "commands": ["editor.action.formatDocument"]
        },
        {
            "before": ["<leader>", "m"],
            "commands": ["editor.action.formatDocument", ":w"]
        },
        {
            "before": ["<leader>", "z"],
            "commands": ["editor.action.toggleWordWrap"]
        },
        { "before": ["<leader>", "q"], "commands": [":q"] },
        {
            "before": ["<leader>", "t", "t"],
            "commands": ["workbench.view.explorer"]
        },
        {
            "before": ["<leader>", "f", "f"],
            "commands": ["workbench.view.search"]
        },
        {
            "before": ["<leader>", "y", "y"],
            "commands": ["workbench.view.search"]
        },
        {
            "before": ["<leader>", "g", "h"],
            "commands": ["editor.action.showDefinitionPreviewHover"]
        },
        {
            "before": ["<leader>", "p", "u"],
            "commands": ["editor.action.showDefinitionPreviewHover"]
        },
        {
            "before": ["<leader>", "g", "d"],
            "commands": ["editor.action.revealDefinition"]
        },
        {
            "before": ["<leader>", "g", "c"],
            "commands": ["editor.action.commentLine"]
        },
        {
            "before": ["<leader>", "p", "."],
            "commands": ["editor.action.commentLine"]
        },
        {
            "before": ["<leader>", "g", "p"],
            "commands": ["markdown.showPreview"]
        },
        {
            "before": ["<", "<"],
            "commands": ["workbench.action.moveEditorLeftInGroup"]
        },
        {
            "before": [">", ">"],
            "commands": ["workbench.action.moveEditorRightInGroup"]
        },
        {
            "before": ["shift+J"],
            "commands": ["workbench.action.previousEditorInGroup"]
        },
        {
            "before": ["shift+K"],
            "commands": ["workbench.action.nextEditorInGroup"]
        },
        {
            "before": ["<leader>", "a"],
            "commands": ["vscode-harpoon.addEditor"]
        },
        {
            "before": ["<leader>", "h", "q"],
            "commands": ["workbench.action.splitEditorLeft"]
        },
        {
            "before": ["<leader>", "h", "j"],
            "commands": ["workbench.action.splitEditorDown"]
        },
        {
            "before": ["<leader>", "h", "k"],
            "commands": ["workbench.action.splitEditorUp"]
        },
        {
            "before": ["<leader>", "h", "x"],
            "commands": ["workbench.action.splitEditorRight"]
        },
        {
            "before": ["<leader>", "u", "b"],
            "commands": ["workbench.action.splitEditorLeft"]
        },
        {
            "before": ["<leader>", "u", "m"],
            "commands": ["workbench.action.splitEditorDown"]
        },
        {
            "before": ["<leader>", "u", "w"],
            "commands": ["workbench.action.splitEditorUp"]
        },
        {
            "before": ["<leader>", "u", "v"],
            "commands": ["workbench.action.splitEditorRight"]
        },
        {
            "before": ["<leader>", "h", "o"],
            "commands": ["workbench.action.focusLeftGroup"]
        },
        {
            "before": ["<leader>", "h", "e"],
            "commands": ["workbench.action.focusBelowGroup"]
        },
        {
            "before": ["<leader>", "h", "u"],
            "commands": ["workbench.action.focusAboveGroup"]
        },
        {
            "before": ["<leader>", "h", "i"],
            "commands": ["workbench.action.focusRightGroup"]
        },
        {
            "before": ["<leader>", "u", "d"],
            "commands": ["workbench.action.focusLeftGroup"]
        },
        {
            "before": ["<leader>", "u", "h"],
            "commands": ["workbench.action.focusBelowGroup"]
        },
        {
            "before": ["<leader>", "u", "t"],
            "commands": ["workbench.action.focusAboveGroup"]
        },
        {
            "before": ["<leader>", "u", "n"],
            "commands": ["workbench.action.focusRightGroup"]
        },
        {
            "before": ["<leader>", "h", "t"],
            "commands": [
                "editor.action.insertLineAfter",
                "md-shortcut.toggleCheckboxes"
            ],
            "after": ["i"]
        },
        {
            "before": ["<leader>", "u", "e"],
            "commands": [
                "editor.action.insertLineAfter",
                "md-shortcut.toggleCheckboxes"
            ],
            "after": ["i"]
        },
        // Third Party
        // vsnetrw
        {
            "before": ["<leader>", "e"],
            "commands": ["vsnetrw.open"],
            "when": "editorLangId != vsnetrw"
        },
        // Harpoon
        {
            "before": ["<leader>", "h"],
            "commands": ["vscode-harpoon.gotoEditor1"]
        },
        {
            "before": ["<leader>", "t"],
            "commands": ["vscode-harpoon.gotoEditor2"]
        },
        {
            "before": ["<leader>", "n"],
            "commands": ["vscode-harpoon.gotoEditor3"]
        },
        {
            "before": ["<leader>", "s"],
            "commands": ["vscode-harpoon.gotoEditor4"]
        },
        {
            "before": ["<leader>", "d"],
            "commands": ["vscode-harpoon.gotoEditor5"]
        },
        {
            "before": ["<leader>", "c"],
            "commands": ["vscode-harpoon.gotoEditor6"]
        },
        {
            "before": ["<leader>", "r"],
            "commands": ["vscode-harpoon.gotoEditor7"]
        },
        {
            "before": ["<leader>", "l"],
            "commands": ["vscode-harpoon.gotoEditor8"]
        },
        {
            "before": ["<leader>", "b"],
            "commands": ["vscode-harpoon.gotoEditor9"]
        },
        { "before": ["<C-e>"], "commands": ["vscode-harpoon.editEditors"] },
        {
            "before": ["<C-o>"],
            "commands": ["vscode-harpoon.editorQuickPick"]
        }
    ],
    "vim.smartRelativeLine": true,
    "vim.useSystemClipboard": true,
    "workbench.colorTheme": "Tokyo Night",
    "workbench.editor.showTabs": "multiple",
    "workbench.startupEditor": "none",

    "[markdown]": {
        "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
    },
    "workbench.activityBar.location": "hidden"
}
